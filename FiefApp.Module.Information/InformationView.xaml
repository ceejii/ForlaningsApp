<UserControl x:Class="FiefApp.Module.Information.InformationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:t6="clr-namespace:FiefApp.Common.Infrastructure.Controls.T6TextBox;assembly=FiefApp.Common.Infrastructure"
             xmlns:fcb="clr-namespace:FiefApp.Common.Infrastructure.UIElements.FakeComboBox;assembly=FiefApp.Common.Infrastructure"
             xmlns:rui="clr-namespace:FiefApp.Module.Information.UIElements.ReligionUI"
             xmlns:models="clr-namespace:FiefApp.Common.Infrastructure.Models;assembly=FiefApp.Common.Infrastructure"
             xmlns:behavior="clr-namespace:FiefApp.Common.Infrastructure.Behaviors;assembly=FiefApp.Common.Infrastructure"
             mc:Ignorable="d" 
             d:DesignHeight="485" 
             d:DesignWidth="778">

    <Grid Background="#FFE5E5E5">
        <Grid.RowDefinitions>
            <RowDefinition Height="9"/>
            <RowDefinition Height="6"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="9"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="6"/>
            <ColumnDefinition Width="45"/>
            <ColumnDefinition Width="6"/>
            <ColumnDefinition Width="45"/>
            <ColumnDefinition Width="8"/>

            <ColumnDefinition Width="23"/>

            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="6"/>
            <ColumnDefinition Width="45"/>
            <ColumnDefinition Width="6"/>
            <ColumnDefinition Width="45"/>
            <ColumnDefinition Width="8"/>

            <ColumnDefinition Width="23"/>

            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="6"/>
            <ColumnDefinition Width="45"/>
            <ColumnDefinition Width="6"/>
            <ColumnDefinition Width="45"/>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Rectangle x:Name="InitialFocus" 
                   Grid.Column="0"
                   Grid.Row="0"
                   Focusable="True"/>

        <Frame Grid.Column="10" 
               Grid.ColumnSpan="8" 
               Grid.Row="1" 
               Grid.RowSpan="25" 
               Background="LightGray" 
               BorderBrush="Gray" 
               BorderThickness="0.5"
               IsTabStop="False"
               Margin="0,0,0,15"/>

        <Frame Grid.Column="10" 
               Grid.ColumnSpan="17" 
               Grid.Row="25" 
               Grid.RowSpan="15" 
               Background="LightGray" 
               BorderBrush="Gray" 
               BorderThickness="0.5"
               IsTabStop="False"
               Margin="0,15,0,0"/>

        <Frame Grid.Column="19" 
               Grid.ColumnSpan="8" 
               Grid.Row="1" 
               Grid.RowSpan="25" 
               Background="LightGray" 
               BorderBrush="Gray" 
               BorderThickness="0.5"
               IsTabStop="False"
               Margin="0,0,0,15"/>

        <Frame Grid.Column="1" 
               Grid.ColumnSpan="8" 
               Grid.Row="1" 
               Grid.RowSpan="39" 
               Background="LightGray" 
               BorderBrush="Gray" 
               BorderThickness="0.5"
               IsTabStop="False"/>

        <!-- COLUMN 1 -->
        <ComboBox 
            x:Name="FiefComboBox"
            Grid.Column="2"
            Grid.ColumnSpan="2"
            Grid.Row="3"
            ItemsSource="{Binding Path=FiefCollection}"
            SelectedIndex="{Binding Path=Index, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Template="{DynamicResource ComboBoxControlTemplate}"
            ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
            HorizontalContentAlignment="Left"
            VerticalContentAlignment="Center"
            Padding="6,0,0,0">
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=FiefCollection.Count}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=FiefCollection.Count}" Value="1">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=FiefCollection.Count}" Value="2">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <ToggleButton 
            x:Name="AddFiefButton"
            Content="lägg till"
            Grid.Column="7"
            Grid.Row="3"
            Command="{Binding Path=AddFiefCommand}"
            VerticalContentAlignment="Center"
            Padding="0"
            Template="{DynamicResource ToggleButtonTemplate}">
            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="IsChecked" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=FiefComboBox, Path=SelectedIndex}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=AddFiefButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsChecked" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>

        <ToggleButton 
            x:Name="RemoveFiefButton"
            Content="tabort"
            Grid.Column="5"
            Grid.Row="3"
            Command="{Binding Path=RemoveFiefCommand}"
            Template="{DynamicResource ToggleButtonTemplate}"
            VerticalContentAlignment="Center"
            Padding="0">
            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=FiefComboBox, Path=Visibility}" Value="Collapsed">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=FiefComboBox, Path=SelectedIndex}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Setter Property="IsChecked" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>

        <TextBox 
            Text="{Binding Path=DataModel.SelectedAllInformationText}" 
            Grid.Column="2" 
            Grid.ColumnSpan="6" 
            Grid.Row="5" 
            Grid.RowSpan="15" 
            Grid.ZIndex="10"
            TextWrapping="Wrap" 
            IsReadOnly="True"
            IsTabStop="False"
            Background="WhiteSmoke"
            Padding="6,0,0,0">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=FiefComboBox, Path=SelectedIndex}" Value="0">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Namn" 
               Grid.Column="2" 
               Grid.Row="5" 
               Grid.ZIndex="1"
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <TextBox Text="{Binding Path=DataModel.FiefName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Grid.ColumnSpan="5" 
                 Grid.Column="3" 
                 Grid.Row="5" 
                 Grid.ZIndex="1"
                 HorizontalContentAlignment="Left"
                 VerticalContentAlignment="Center"
                 Template="{DynamicResource TextBoxTemplate}"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Padding="3,0,0,0">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label 
            Content="Typ" 
            Grid.Column="2" 
            Grid.Row="7"
            Grid.ZIndex="1"
            HorizontalContentAlignment="Right" 
            VerticalContentAlignment="Center"
            Padding="0,0,6,0"/>

        <ComboBox x:Name="TypeComboBox"  
                  Grid.Column="3" 
                  Grid.ColumnSpan="5" 
                  Grid.Row="7"
                  Grid.ZIndex="1"
                  ItemsSource="{Binding Path=SettingsModel.TypeTextList}"
                  SelectedIndex="{Binding Path=DataModel.FiefTypeIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Text="{Binding Path=DataModel.FiefType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
                  HorizontalContentAlignment="Left"
                  VerticalContentAlignment="Center"
                  Padding="6,0,0,0" 
                  Template="{DynamicResource ComboBoxControlTemplate}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding Path=DataContext.UpdateInformationTextCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}, AncestorLevel=1}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <fcb:FakeComboBox Grid.Column="3"
                          Grid.ColumnSpan="5"
                          Grid.Row="7"
                          Grid.ZIndex="1"
                          TextBoxText="{Binding Path=Text, ElementName=TypeComboBox}"
                          IsSmall="False">
            
            <fcb:FakeComboBox.Style>
                <Style TargetType="{x:Type fcb:FakeComboBox}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </fcb:FakeComboBox.Style>
        </fcb:FakeComboBox>

        <TextBox 
            Text="{Binding Path=DataModel.SelectedInformationText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
            Grid.Column="2" 
            Grid.ColumnSpan="6" 
            Grid.Row="9" 
            Grid.RowSpan="9" 
            Grid.ZIndex="2"
            TextWrapping="Wrap" 
            IsReadOnly="True"
            Background="WhiteSmoke"
            Padding="6,0,0,0"/>

        <Label Content="Vägnät" 
               Grid.Column="2" 
               Grid.Row="19" 
               Grid.ZIndex="1"
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <ComboBox Grid.Column="3" 
                  Grid.ColumnSpan="5" 
                  Grid.Row="19"
                  Grid.ZIndex="1"
                  ItemsSource="{Binding Path=SettingsModel.RoadTypesList}"
                  Text="{Binding Path=DataModel.Roads, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Template="{DynamicResource ComboBoxControlTemplate}"
                  ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
                  HorizontalContentAlignment="Left"
                  VerticalContentAlignment="Center"
                  Padding="6,0,0,0">
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <fcb:FakeComboBox Grid.Column="3"
                          Grid.ColumnSpan="5"
                          Grid.Row="19"
                          Grid.ZIndex="1"
                          IsSmall="False"
                          TextBoxText="{Binding Path=DataModel.Roads}">
            <fcb:FakeComboBox.Style>
                <Style TargetType="{x:Type fcb:FakeComboBox}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </fcb:FakeComboBox.Style>
        </fcb:FakeComboBox>

        <Label Content="Berg" 
               Grid.Column="2" 
               Grid.ColumnSpan="5" 
               Grid.Row="21" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <ComboBox Text="{Binding Path=DataModel.Mountain, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Grid.Column="7" 
                  Grid.Row="21"
                  HorizontalContentAlignment="Left"
                  VerticalContentAlignment="Center"
                  ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
                  Template="{DynamicResource ComboBoxControlTemplate}"
                  Padding="9,0,0,0">
            <ComboBoxItem Content="Ja"/>
            <ComboBoxItem Content="Nej"/>
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <fcb:FakeComboBox Grid.Column="7"
                          Grid.Row="21"
                          IsSmall="True"
                          TextBoxText="{Binding Path=DataModel.Mountain}">
            <fcb:FakeComboBox.Style>
                <Style TargetType="{x:Type fcb:FakeComboBox}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </fcb:FakeComboBox.Style>
        </fcb:FakeComboBox>

        <Label Content="Bergskedja" 
               Grid.Column="2" 
               Grid.ColumnSpan="5" 
               Grid.Row="23" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <ComboBox Text="{Binding Path=DataModel.MountainRange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Grid.Column="7" 
                  Grid.Row="23"
                  HorizontalContentAlignment="Left"
                  VerticalContentAlignment="Center"
                  ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
                  Template="{DynamicResource ComboBoxControlTemplate}"
                  Padding="9,0,0,0">
            <ComboBoxItem Content="Ja"/>
            <ComboBoxItem Content="Nej"/>
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <fcb:FakeComboBox Grid.Column="7"
                          Grid.Row="23"
                          IsSmall="True"
                          TextBoxText="{Binding Path=DataModel.MountainRange}">
            <fcb:FakeComboBox.Style>
                <Style TargetType="{x:Type fcb:FakeComboBox}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </fcb:FakeComboBox.Style>
        </fcb:FakeComboBox>

        <Label Content="Flod" 
               Grid.Column="2" 
               Grid.ColumnSpan="5" 
               Grid.Row="25" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <ComboBox Text="{Binding Path=DataModel.River, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Grid.Column="7" 
                  Grid.Row="25"
                  HorizontalContentAlignment="Left"
                  VerticalContentAlignment="Center"
                  ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
                  Template="{DynamicResource ComboBoxControlTemplate}"
                  Padding="9,0,0,0">
            <ComboBoxItem Content="Ja"/>
            <ComboBoxItem Content="Nej"/>
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <fcb:FakeComboBox Grid.Column="7"
                          Grid.Row="25"
                          IsSmall="True"
                          TextBoxText="{Binding Path=DataModel.River}">
            <fcb:FakeComboBox.Style>
                <Style TargetType="{x:Type fcb:FakeComboBox}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </fcb:FakeComboBox.Style>
        </fcb:FakeComboBox>

        <Label Content="Jungel" 
               Grid.Column="2" 
               Grid.ColumnSpan="5" 
               Grid.Row="27" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <ComboBox Text="{Binding Path=DataModel.Jungle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Grid.Column="7" 
                  Grid.Row="27"
                  HorizontalContentAlignment="Left"
                  VerticalContentAlignment="Center"
                  ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
                  Template="{DynamicResource ComboBoxControlTemplate}"
                  Padding="9,0,0,0">
            <ComboBoxItem Content="Ja"/>
            <ComboBoxItem Content="Nej"/>
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <fcb:FakeComboBox Grid.Column="7"
                          Grid.Row="27"
                          IsSmall="True"
                          TextBoxText="{Binding Path=DataModel.Jungle}">
            <fcb:FakeComboBox.Style>
                <Style TargetType="{x:Type fcb:FakeComboBox}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </fcb:FakeComboBox.Style>
        </fcb:FakeComboBox>

        <Label Content="Kust" 
               Grid.Column="2" 
               Grid.ColumnSpan="5" 
               Grid.Row="29" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <ComboBox Text="{Binding Path=DataModel.Coast, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Grid.Column="7" 
                  Grid.Row="29"
                  HorizontalContentAlignment="Left"
                  VerticalContentAlignment="Center"
                  ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
                  Template="{DynamicResource ComboBoxControlTemplate}"
                  Padding="9,0,0,0">
            <ComboBoxItem Content="Ja"/>
            <ComboBoxItem Content="Nej"/>
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <fcb:FakeComboBox Grid.Column="7"
                          Grid.Row="29"
                          IsSmall="True"
                          TextBoxText="{Binding Path=DataModel.Coast}">
            <fcb:FakeComboBox.Style>
                <Style TargetType="{x:Type fcb:FakeComboBox}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </fcb:FakeComboBox.Style>
        </fcb:FakeComboBox>

        <Label Content="Sjö" 
               Grid.Column="2" 
               Grid.ColumnSpan="5" 
               Grid.Row="31" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <ComboBox Text="{Binding Path=DataModel.Lake, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Grid.Column="7" 
                  Grid.Row="31"
                  HorizontalContentAlignment="Left"
                  VerticalContentAlignment="Center"
                  ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
                  Template="{DynamicResource ComboBoxControlTemplate}"
                  Padding="9,0,0,0">
            <ComboBoxItem Content="Ja"/>
            <ComboBoxItem Content="Nej"/>
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <fcb:FakeComboBox Grid.Column="7"
                          Grid.Row="31"
                          IsSmall="True"
                          TextBoxText="{Binding Path=DataModel.Lake}">
            <fcb:FakeComboBox.Style>
                <Style TargetType="{x:Type fcb:FakeComboBox}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </fcb:FakeComboBox.Style>
        </fcb:FakeComboBox>

        <Label Content="Slätt" 
               Grid.Column="2" 
               Grid.ColumnSpan="5" 
               Grid.Row="33" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <ComboBox Text="{Binding Path=DataModel.Plain, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Grid.Column="7" 
                  Grid.Row="33"
                  HorizontalContentAlignment="Left"
                  VerticalContentAlignment="Center"
                  ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
                  Template="{DynamicResource ComboBoxControlTemplate}"
                  Padding="9,0,0,0">
            <ComboBoxItem Content="Ja"/>
            <ComboBoxItem Content="Nej"/>
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <fcb:FakeComboBox Grid.Column="7"
                          Grid.Row="33"
                          IsSmall="True"
                          TextBoxText="{Binding Path=DataModel.Plain}">
            <fcb:FakeComboBox.Style>
                <Style TargetType="{x:Type fcb:FakeComboBox}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </fcb:FakeComboBox.Style>
        </fcb:FakeComboBox>

        <Label Content="Träsk" 
               Grid.Column="2" 
               Grid.ColumnSpan="5" 
               Grid.Row="35" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <ComboBox Text="{Binding Path=DataModel.Swamp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Grid.Column="7" 
                  Grid.Row="35"
                  HorizontalContentAlignment="Left"
                  VerticalContentAlignment="Center"
                  ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
                  Template="{DynamicResource ComboBoxControlTemplate}"
                  Padding="9,0,0,0">
            <ComboBoxItem Content="Ja"/>
            <ComboBoxItem Content="Nej"/>
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <fcb:FakeComboBox Grid.Column="7"
                          Grid.Row="35"
                          IsSmall="True"
                          TextBoxText="{Binding Path=DataModel.Swamp}">
            <fcb:FakeComboBox.Style>
                <Style TargetType="{x:Type fcb:FakeComboBox}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </fcb:FakeComboBox.Style>
        </fcb:FakeComboBox>

        <Label Content="Öken" 
               Grid.Column="2" 
               Grid.ColumnSpan="5" 
               Grid.Row="37" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <ComboBox Text="{Binding Path=DataModel.Desert, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Grid.Column="7" 
                  Grid.Row="37"
                  HorizontalContentAlignment="Left"
                  VerticalContentAlignment="Center"
                  ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
                  Template="{DynamicResource ComboBoxControlTemplate}"
                  Padding="9,0,0,0">
            <ComboBoxItem Content="Ja"/>
            <ComboBoxItem Content="Nej"/>
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <fcb:FakeComboBox Grid.Column="7"
                          Grid.Row="37"
                          IsSmall="True"
                          TextBoxText="{Binding Path=DataModel.Desert}">
            <fcb:FakeComboBox.Style>
                <Style TargetType="{x:Type fcb:FakeComboBox}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </fcb:FakeComboBox.Style>
        </fcb:FakeComboBox>


        <!-- COLUMN 2 -->

        <Label Content="Kvalitet" 
               Grid.Column="14" 
               Grid.Row="3" 
               HorizontalContentAlignment="Center"
               VerticalContentAlignment="Center"
               Padding="0"/>

        <Label Content="UN" 
               Grid.Column="16" 
               Grid.Row="3" 
               HorizontalContentAlignment="Center"
               VerticalContentAlignment="Center"
               Padding="0"/>

        <Label Content="Djurhållning" 
               Grid.Column="11" 
               Grid.ColumnSpan="2" 
               Grid.Row="5" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0"/>

        <TextBox Text="{Binding Path=DataModel.AnimalHusbandryQuality, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Column="14" 
                 Grid.Row="5" 
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Padding="0" 
                 Template="{DynamicResource TextBoxTemplate}"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <TextBox Text="{Binding Path=DataModel.AnimalHusbandryDevelopmentLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Column="16" 
                 Grid.Row="5" 
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Padding="0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Fiske" 
               Grid.Column="11" 
               Grid.ColumnSpan="2" 
               Grid.Row="7" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0"/>

        <TextBox Text="{Binding Path=DataModel.FishingQuality, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Grid.Column="14" 
                 Grid.Row="7" 
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Padding="0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <TextBox Text="{Binding Path=DataModel.FishingDevelopmentLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Column="16" 
                 Grid.Row="7" 
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Padding="0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Jakt" 
               Grid.Column="11" 
               Grid.ColumnSpan="2" 
               Grid.Row="9" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0"/>

        <TextBox Text="{Binding Path=DataModel.HuntingQuality, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Column="14" 
                 Grid.Row="9" 
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Padding="0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <TextBox Text="{Binding Path=DataModel.HuntingDevelopmentLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Column="16" 
                 Grid.Row="9" 
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Padding="0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Jordbruk" 
               Grid.Column="11" 
               Grid.ColumnSpan="2" 
               Grid.Row="11" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0"/>

        <TextBox Text="{Binding Path=DataModel.AgricultureQuality, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Grid.Column="14" 
                 Grid.Row="11" 
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Padding="0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <TextBox Text="{Binding Path=DataModel.AgricultureDevelopmentLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Grid.Column="16" 
                 Grid.Row="11" 
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Padding="0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Malm" 
               Grid.Column="11" 
               Grid.ColumnSpan="2" 
               Grid.Row="13" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0"/>

        <TextBox Text="{Binding Path=DataModel.OreQuality, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Grid.Column="14" 
                 Grid.Row="13" 
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Padding="0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <TextBox Text="{Binding Path=DataModel.OreDevelopmentLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Column="16" 
                 Grid.Row="13" 
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Padding="0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Medicin" 
               Grid.Column="11" 
               Grid.ColumnSpan="4" 
               Grid.Row="15" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0"/>

        <TextBox Text="{Binding Path=DataModel.HealthcareDevelopmentLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Column="16" 
                 Grid.Row="15" 
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Padding="0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Militär" 
               Grid.Column="11" 
               Grid.ColumnSpan="4" 
               Grid.Row="17" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0"/>

        <TextBox Text="{Binding Path=DataModel.MilitaryDevelopmentLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Column="16" 
                 Grid.Row="17" 
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Padding="0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Sjöfart" 
               Grid.Column="11" 
               Grid.ColumnSpan="4" 
               Grid.Row="19" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0"/>

        <TextBox Text="{Binding Path=DataModel.ShippingDevelopmentLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Column="16" 
                 Grid.Row="19" 
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Padding="0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Skogsmark" 
               Grid.Column="11"
               Grid.ColumnSpan="4" 
               Grid.Row="21" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0"/>

        <TextBox Text="{Binding Path=DataModel.WoodlandDevelopmentLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Grid.Column="16" 
                 Grid.Row="21"
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Padding="0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Utbildning" 
               Grid.Column="11" 
               Grid.ColumnSpan="4" 
               Grid.Row="23" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0"/>

        <TextBox Text="{Binding Path=DataModel.EducationDevelopmentLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Column="16" 
                 Grid.Row="23" 
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 Padding="0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Religion" 
               Grid.Column="11" 
               Grid.ColumnSpan="4" 
               Grid.Row="27" 
               HorizontalContentAlignment="Right"
               VerticalContentAlignment="Center"
               Padding="0,0,24,0"/>

        <Label Content="%" 
               Grid.Column="16" 
               Grid.Row="27" 
               HorizontalContentAlignment="Center"
               VerticalContentAlignment="Center"
               Padding="0"/>

        <Label Content="Överhuvud" 
               Grid.Column="18" 
               Grid.ColumnSpan="4" 
               Grid.Row="27" 
               HorizontalContentAlignment="Right"
               VerticalContentAlignment="Center"
               Padding="0,0,24,0"/>

        <Label Content="Resurser" 
               Grid.Column="22" 
               Grid.ColumnSpan="3"
               Grid.Row="27" 
               HorizontalContentAlignment="Center"
               VerticalContentAlignment="Center"
               Padding="0"/>

        <Label Content="Lojalitet" 
               Grid.Column="24" 
               Grid.ColumnSpan="3"
               Grid.Row="27" 
               HorizontalContentAlignment="Center"
               VerticalContentAlignment="Center"
               Padding="0"/>

        <ItemsControl ItemsSource="{Binding Path=DataModel.ReligionsShowCollection}"
                      Grid.Column="11"
                      Grid.ColumnSpan="15"
                      Grid.Row="29"
                      Grid.RowSpan="8">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="models:ReligionModel">
                    <rui:ReligionUI Religion="{Binding Path=Religion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    PercentOfPopulation="{Binding Path=PercentOfPopulation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    HeadOfReligion="{Binding Path=HeadOfReligion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    RResources="{Binding Path=Resources, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Loyalty="{Binding Path=Loyalty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <rui:ReligionUI.Style>
                            <Style TargetType="{x:Type rui:ReligionUI}">
                                <Setter Property="IsReadOnly" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                                        <Setter Property="IsReadOnly" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </rui:ReligionUI.Style>
                    </rui:ReligionUI>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Label Content="Övriga religioner" 
               Grid.Column="11" 
               Grid.ColumnSpan="4" 
               Grid.Row="37" 
               HorizontalContentAlignment="Right"
               VerticalContentAlignment="Center"
               Padding="0"/>

        <TextBox Text="{Binding Path=DataModel.OtherReligions}" 
                 Grid.Column="16" 
                 Grid.Row="37" 
                 Template="{DynamicResource TextBoxTemplate}"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 HorizontalContentAlignment="Center"
                 VerticalContentAlignment="Center"
                 IsReadOnly="True"
                 Padding="0"/>


        <!-- COLUMN 3 -->

        <Label Content="Länsherrens titel" 
               Grid.Column="20" 
               Grid.Row="3" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <ComboBox 
            Text="{Binding Path=DataModel.Liegelord.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            ItemsSource="{Binding Path=SettingsModel.LiegelordTitlesList}"
            Grid.Column="21" 
            Grid.ColumnSpan="5" 
            Grid.Row="3"
            ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
            Template="{DynamicResource ComboBoxControlTemplate}"
            HorizontalContentAlignment="Left"
            VerticalContentAlignment="Center"
            Padding="6,0,0,0">
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <fcb:FakeComboBox Grid.Column="21"
                          Grid.ColumnSpan="5"
                          Grid.Row="3"
                          TextBoxText="{Binding Path=DataModel.Liegelord.Title}">
            <fcb:FakeComboBox.Style>
                <Style TargetType="{x:Type fcb:FakeComboBox}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </fcb:FakeComboBox.Style>
        </fcb:FakeComboBox>

        <Label Content="Namn" 
               Grid.Column="20" 
               Grid.Row="5" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <TextBox Text="{Binding Path=DataModel.Liegelord.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Grid.Column="21" 
                 Grid.ColumnSpan="5" 
                 Grid.Row="5" 
                 HorizontalContentAlignment="Left"
                 VerticalContentAlignment="Center"
                 Padding="3,0,0,0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Ätt" 
               Grid.Column="20" 
               Grid.Row="7" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <TextBox Text="{Binding Path=DataModel.Liegelord.Family, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Grid.Column="21"
                 Grid.ColumnSpan="5" 
                 Grid.Row="7" 
                 HorizontalContentAlignment="Left"
                 VerticalContentAlignment="Center"
                 Padding="3,0,0,0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Förläning" 
               Grid.Column="20" 
               Grid.Row="9" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <TextBox Text="{Binding Path=DataModel.Liegelord.Fief, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Column="21" 
                 Grid.ColumnSpan="5" 
                 Grid.Row="9" 
                 HorizontalContentAlignment="Left"
                 VerticalContentAlignment="Center"
                 Padding="3,0,0,0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Högsäte" 
               Grid.Column="20" 
               Grid.Row="11" 
               HorizontalContentAlignment="Right"
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <TextBox Text="{Binding Path=DataModel.Liegelord.Stronghold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Column="21"
                 Grid.ColumnSpan="5" 
                 Grid.Row="11"
                 HorizontalContentAlignment="Left"
                 VerticalContentAlignment="Center"
                 Padding="3,0,0,0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label Content="Läge"
               Grid.Column="20" 
               Grid.Row="13" 
               HorizontalContentAlignment="Right" 
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

        <TextBox Text="{Binding Path=DataModel.Liegelord.Location, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Grid.Column="21" 
                 Grid.ColumnSpan="5"
                 Grid.Row="13" 
                 HorizontalContentAlignment="Left"
                 VerticalContentAlignment="Center"
                 Padding="3,0,0,0"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Grid Grid.Column="20"
              Grid.ColumnSpan="6"
              Grid.Row="15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="45"/>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="45"/>
            </Grid.ColumnDefinitions>

            <Label Content="Resurser"
               Grid.Column="0" 
               Grid.Row="0"
               HorizontalContentAlignment="Right"
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

            <t6:T6TextBox T6Value="{Binding Path=DataModel.Liegelord.Resources, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Grid.Column="1"
                      Grid.Row="0">
                <t6:T6TextBox.Style>
                    <Style TargetType="{x:Type t6:T6TextBox}">
                        <Setter Property="BgColor" Value="WhiteSmoke"/>
                        <Setter Property="ReadOnly" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                                <Setter Property="BgColor" Value="AntiqueWhite" />
                                <Setter Property="ReadOnly" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </t6:T6TextBox.Style>
            </t6:T6TextBox>

            <Label Content="Lojalitet" 
               Grid.Column="3" 
               Grid.Row="0"
               HorizontalContentAlignment="Right"
               VerticalContentAlignment="Center"
               Padding="0,0,6,0"/>

            <t6:T6TextBox T6Value="{Binding Path=DataModel.Liegelord.Loyalty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Grid.Column="4"
                      Grid.Row="0">
                <t6:T6TextBox.Style>
                    <Style TargetType="{x:Type t6:T6TextBox}">
                        <Setter Property="BgColor" Value="WhiteSmoke"/>
                        <Setter Property="ReadOnly" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                                <Setter Property="BgColor" Value="AntiqueWhite" />
                                <Setter Property="ReadOnly" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </t6:T6TextBox.Style>
            </t6:T6TextBox>

        </Grid>

        <Label Content="Skyldigheter" 
               Grid.Column="20" 
               Grid.Row="17" 
               VerticalContentAlignment="Center"
               Padding="12,0,0,0"/>

        <TextBox Text="{Binding Path=DataModel.Liegelord.Obligations, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Column="20"
                 Grid.ColumnSpan="6" 
                 Grid.Row="19" 
                 Grid.RowSpan="5" 
                 TextWrapping="Wrap"
                 behavior:TextBoxBehavior.SelectAllTextOnFocus="True"
                 Template="{DynamicResource TextBoxTemplate}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <ToggleButton 
            x:Name="EditButton"
            Content="redigera"
            Command="{Binding Path=EditButtonCommand}"
            Grid.Column="25"
            Grid.ColumnSpan="2"
            Grid.Row="41"
            VerticalContentAlignment="Center"
            Padding="0"
            Width="51"
            HorizontalAlignment="Right" 
            Template="{DynamicResource ToggleButtonTemplate}">
            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="IsChecked" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=CancelEditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Setter Property="IsChecked" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=SaveEditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Setter Property="IsChecked" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=FiefComboBox, Path=SelectedIndex}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Setter Property="IsChecked" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>

        <ToggleButton 
            x:Name="CancelEditButton"
            Content="avbryt"
            Command="{Binding Path=CancelEditingButtonCommand}"
            Grid.Column="25"
            Grid.ColumnSpan="2"
            Grid.Row="41"
            Width="51"
            HorizontalAlignment="Right"
            VerticalContentAlignment="Center"
            Padding="0"
            Template="{DynamicResource ToggleButtonTemplate}">
            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Setter Property="IsChecked" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Setter Property="IsChecked" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>

        <ToggleButton 
            x:Name="SaveEditButton"
            Content="spara"
            Command="{Binding Path=SaveEditedButtonCommand}"
            Template="{DynamicResource ToggleButtonTemplate}"
            Grid.Column="22"
            Grid.ColumnSpan="3"
            Grid.Row="41"
            HorizontalAlignment="Left"
            VerticalContentAlignment="Center"
            Padding="0"
            Width="51"
            Margin="2,0,0,0">
            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Setter Property="IsChecked" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditButton, Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Setter Property="IsChecked" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>
    </Grid>
</UserControl>
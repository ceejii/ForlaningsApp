<UserControl x:Class="FiefApp.Module.Manor.ManorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:behaviors="clr-namespace:FiefApp.Common.Infrastructure.Behaviors;assembly=FiefApp.Common.Infrastructure"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:customCommands="clr-namespace:FiefApp.Common.Infrastructure.CustomCommands;assembly=FiefApp.Common.Infrastructure"
             xmlns:residentUi="clr-namespace:FiefApp.Module.Manor.UIElements.ResidentUI"
             mc:Ignorable="d" 
             d:DesignHeight="531" 
             d:DesignWidth="784">

    <Grid Background="#FFE5E5E5">
        <Grid.RowDefinitions>
            <RowDefinition Height="9"/>
            <RowDefinition Height="6"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="9"/>
            <RowDefinition Height="3"/>
            <RowDefinition Height="21"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="6"/>
            <ColumnDefinition Width="45"/>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="6"/>
            <ColumnDefinition Width="45"/>
            <ColumnDefinition Width="8"/>

            <ColumnDefinition Width="20"/>

            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="478"/>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Rectangle 
            x:Name="InitialFocus" 
            Grid.Column="0"
            Grid.Row="0"
            Focusable="True"/>

        <Frame 
            Grid.Column="1" 
            Grid.ColumnSpan="9"
            Grid.Row="1"
            Grid.RowSpan="39" 
            Background="LightGray" 
            BorderBrush="Gray" 
            BorderThickness="0.5"
            IsTabStop="False"/>


        <ComboBox 
            x:Name="FiefComboBox"
            Grid.Column="2"
            Grid.ColumnSpan="5"
            Grid.Row="3"
            Width="120"
            ItemsSource="{Binding Path=FiefCollection}"
            SelectedIndex="{Binding Path=Index, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Template="{DynamicResource ComboBoxControlTemplate}"
            ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
            HorizontalAlignment="Left"
            HorizontalContentAlignment="Left"
            VerticalContentAlignment="Center"
            Padding="6,0,0,0">
            <ComboBox.Style>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=FiefCollection.Count}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=FiefCollection.Count}" Value="1">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=FiefCollection.Count}" Value="2">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>

        <Label
            Content="{Binding ElementName=FiefComboBox, Path=Text}"
            Grid.Column="2"
            Grid.ColumnSpan="5"
            Grid.Row="3"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            HorizontalAlignment="Left"
            HorizontalContentAlignment="Left"
            Padding="6,0,0,0"
            Width="120"
            ToolTip="Läge">
            <Label.Style>
                <Style TargetType="{x:Type Label}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=FiefComboBox, Path=Visibility}" Value="Collapsed">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Style>
        </Label>

        <TextBox
            Text="{Binding Path=DataModel.ManorName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Grid.Column="2"
            Grid.ColumnSpan="3"
            Grid.Row="5"
            HorizontalContentAlignment="Left"
            VerticalContentAlignment="Center"
            Padding="4,0,0,0"
            ToolTip="Godsets namn"
            behaviors:TextBoxBehavior.SelectAllTextOnFocus="True">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Template" Value="{DynamicResource TextBoxDisabled}"/>
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditEnableButton, Path=Visibility}" Value="Hidden">
                            <Setter Property="Template" Value="{DynamicResource TextBoxEnabled}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=EditEnableButton, Path=Visibility}" Value="Hidden">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label
            Grid.Column="2"
            Grid.Row="7"
            Content="Befolkning"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Right"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="0"/>

        <TextBox
            Grid.Column="4"
            Grid.Row="7"
            Text="{Binding Path=DataModel.ManorPopulation}"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Center"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="0"
            IsReadOnly="True"
            IsTabStop="False"
            Background="WhiteSmoke"/>

        <Label
            Grid.Column="2"
            Grid.Row="9"
            Content="Tunnland"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Right"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="0"/>

        <TextBox
            Grid.Column="4"
            Grid.Row="9"
            Text="{Binding Path=DataModel.ManorAcres}"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Center"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="0"
            IsReadOnly="True"
            IsTabStop="False"
            Background="WhiteSmoke"/>

        <Label
            Grid.Column="6"
            Grid.Row="3"
            Content="Betesmark"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Right"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="0"/>

        <TextBox
            Grid.Column="8"
            Grid.Row="3"
            Text="{Binding Path=DataModel.ManorPasture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            Padding="0"
            behaviors:TextBoxBehavior.SelectAllTextOnFocus="True">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Template" Value="{DynamicResource TextBoxDisabled}"/>
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditEnableButton, Path=Visibility}" Value="Hidden">
                            <Setter Property="Template" Value="{DynamicResource TextBoxEnabled}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=EditEnableButton, Path=Visibility}" Value="Hidden">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label
            Grid.Column="6"
            Grid.Row="5"
            Content="Åkermark"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Right"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="0"/>

        <TextBox
            Grid.Column="8"
            Grid.Row="5"
            Text="{Binding Path=DataModel.ManorArable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            Padding="0"
            behaviors:TextBoxBehavior.SelectAllTextOnFocus="True">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Template" Value="{DynamicResource TextBoxDisabled}"/>
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditEnableButton, Path=Visibility}" Value="Hidden">
                            <Setter Property="Template" Value="{DynamicResource TextBoxEnabled}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=EditEnableButton, Path=Visibility}" Value="Hidden">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label
            Grid.Column="6"
            Grid.Row="7"
            Content="Skogsmark"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Right"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="0"/>

        <TextBox
            Grid.Column="8"
            Grid.Row="7"
            Text="{Binding Path=DataModel.ManorWoodland, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Center"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="0"
            behaviors:TextBoxBehavior.SelectAllTextOnFocus="True">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Template" Value="{DynamicResource TextBoxDisabled}"/>
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditEnableButton, Path=Visibility}" Value="Hidden">
                            <Setter Property="Template" Value="{DynamicResource TextBoxEnabled}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=EditEnableButton, Path=Visibility}" Value="Hidden">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label
            Grid.Column="6"
            Grid.Row="9"
            Content="Avverkad"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Right"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="0"/>

        <TextBox
            Grid.Column="8"
            Grid.Row="9"
            Text="{Binding Path=DataModel.ManorFelling, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Center"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="0"
            behaviors:TextBoxBehavior.SelectAllTextOnFocus="True">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Template" Value="{DynamicResource TextBoxDisabled}"/>
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditEnableButton, Path=Visibility}" Value="Hidden">
                            <Setter Property="Template" Value="{DynamicResource TextBoxEnabled}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=EditEnableButton, Path=Visibility}" Value="Hidden">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label
            Grid.Column="2"
            Grid.Row="11"
            Content="Rikedom"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Right"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="0"/>

        <TextBox
            Grid.Column="4"
            Grid.Row="11"
            Text="{Binding Path=DataModel.ManorWealth}"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Center"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="0"
            IsReadOnly="True"
            IsTabStop="False"
            Background="WhiteSmoke"/>

        <Label
            Grid.Column="6"
            Grid.Row="11"
            Content="Obrukbar"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Right"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="0"/>

        <TextBox
            Grid.Column="8"
            Grid.Row="11"
            Text="{Binding Path=DataModel.ManorUseless, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Center"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="0"
            behaviors:TextBoxBehavior.SelectAllTextOnFocus="True">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Template" Value="{DynamicResource TextBoxDisabled}"/>
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=EditEnableButton, Path=Visibility}" Value="Hidden">
                            <Setter Property="Template" Value="{DynamicResource TextBoxEnabled}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=EditEnableButton, Path=Visibility}" Value="Hidden">
                            <Setter Property="IsReadOnly" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Label
            Grid.Column="2"
            Grid.ColumnSpan="3"
            Grid.Row="13"
            Content="Levnadsstandard"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Right"
            VerticalAlignment="Stretch"
            VerticalContentAlignment="Center"
            Padding="0"/>

        <ComboBox
            Grid.Column="6"
            Grid.ColumnSpan="3"
            Grid.Row="13">

        </ComboBox>


        <Label
            Grid.Column="2"
            Grid.ColumnSpan="5"
            Grid.Row="15"
            Content="Boende på godset"
            HorizontalContentAlignment="Left"
            VerticalContentAlignment="Center"
            Padding="12,0,0,0"/>

        <Label
            Grid.Column="8"
            Grid.Row="15"
            Content="Ålder"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            Padding="0"/>

        <ItemsControl Grid.Column="2"
                      Grid.ColumnSpan="7"
                      Grid.Row="17"
                      Grid.RowSpan="22">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <residentUi:ResidentUI Id="{Binding Path=Id}"
                                           Resident="{Binding Path=Name}"
                                           Age="{Binding Path=Age}"
                                           ResidentType="{Binding Path=Type}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ResidentUIEvent">
                                <customCommands:CustomCommandAction Command="{Binding Path=DataContext.ResidentUIEventHandler, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}, AncestorLevel=2}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </residentUi:ResidentUI>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>



        <Button x:Name="EditEnableButton"
                Content="redigera"
                Command="{Binding Path=EditButtonCommand}"
                Grid.Column="12"
                Grid.Row="41"
                Visibility="{Binding Path=EditButtonVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                VerticalContentAlignment="Center"
                Padding="0"
                Width="51"
                HorizontalAlignment="Right"
                Style="{DynamicResource ButtonStyle}"/>

        <Button Content="avbryt"
                Command="{Binding Path=CancelEditingButtonCommand}"
                Visibility="{Binding Path=IsEditingVisibility}"
                Style="{DynamicResource ButtonStyle}"
                Grid.Column="12"
                Grid.Row="41"
                Width="51"
                HorizontalAlignment="Right"
                VerticalContentAlignment="Center"
                Padding="0"/>

        <Button Content="spara"
                Command="{Binding Path=SaveEditedButtonCommand}"
                Visibility="{Binding Path=IsEditingVisibility}"
                Style="{DynamicResource ButtonStyle}"
                Grid.Column="12"
                Grid.Row="41"
                HorizontalAlignment="Right"
                VerticalContentAlignment="Center"
                Padding="0"
                Width="51"
                Margin="0,0,57,0"/>

    </Grid>
</UserControl>
